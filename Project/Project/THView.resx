<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhVQCeAIcAAAAAAP////niufOEhuh/gMBpbvh5h+pyf/18i+51gfJ4hORxfdpuec5pdLlhaqte
        Zvh1hvNyg59WYHdMUv51ipJUXoZPV1s5P2pFTFlGSmFNUceMoUc0PO6GtthvosNolUlBRfqQyd94sp9X
        he2Fz7yMrviV4sZvtappodaAzWlSaPyk/P+3/lZVVvST9uSI7FxTXcFwz8964IVejTIsNDM2Pjc6Qjs+
        RkBDSygsNCImLSwxORggJyIrMk9UVFxfX1pcXF5fX1VbWltfXlNYVk1PTmBhYEpLSV5fXV1eXNblwt3n
        xt/pxtrjw9fgwNbfv9vkxNPbu+Tty9jgwcPKr97mwri+pYGEd6uvnM3Ss29waevzrOTpouruquXqqerv
        rezwsejsr5KTgujrq+7xtPH0ud3emeztruvstdTTj/Dwt1NTUuvpq+Phpezqreflqevqre3rr+zqr+vp
        ru7ssevqr+rorunore3rse/utO3rsuzqsejmrubkreLgqu3ss+7ste3rtOjnsOros+7tt+Heoernquvo
        rezpr+rnrejlrNzZpOvosN/cp+zpse7rtOzpsujlsOzptJ+ejOzorenkq+7psOvmr+vnsOnlr+XhrOzm
        r+rkrdfRn+rkruvlsOzmsevmsujir+zntOjhqebeqOPbpunhrOnirOrjrerjruPcquvkst7VnN/WpOfe
        q9vTouzjsOrhrujgrurisenfrNTKnF9eWdvNlNrPndbIl9DEmdfFjNHCk82/lcy2ftK+ism4kMSzjfvm
        tvzovPzmu/rkud3CkL+sid7IourUrePOqPvku/rjuvnjufPdtf/pv7ynhLWhgNjBm/fft+/Ysf7mvfvj
        vPLgwfrcsauVd/jTp/DNo9a5ltfJt9exhuzPsMrCuWxSOH9oUeHEps60ms6ievfFlvO5ivjYvJd7ZqmE
        bduhgdi2o8mlktKSd7yThJBuZMCAcdKVieGMfs5/dN18e1FQUO3s7F9fX15eXl1dXVtbW1paWlhYWP//
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAAVQCeAAAI/wD/CRxIsKDBgwgTKlzIsKHDhxAj
        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
        BOu1WGOPRfamgAAAOw==
</value>
  </data>
</root>